{"version":3,"sources":["../../../server/app/models/Space.js"],"names":["mongoose","require","Schema","spaceSchema","name","String","defaultLocale","type","default","required","organization","Types","ObjectId","ref","apiKeys","_id","description","deliveryKey","previewKey","expireDate","Date","active","Boolean","contentTypes","identifier","displayField","fields","id","localized","items","linkType","validations","linkContentType","in","linkMimetypeGroup","size","min","Number","max","range","regexp","pattern","flags","unique","entries","assets","createdAt","now","updatedAt","timestamps","Space","model","module","exports"],"mappings":";;AAAA,IAAMA,WAAWC,QAAQ,UAAR,CAAjB;AACA,IAAMC,SAASF,SAASE,MAAxB;;AAEA,IAAMC,cAAc,IAAID,MAAJ,CAAW;AAC7BE,QAAMC,MADuB;AAE7BC,iBAAe,EAAEC,MAAMF,MAAR,EAAgBG,SAAS,IAAzB,EAA+BC,UAAU,IAAzC,EAFc;AAG7B;AACAC,gBAAe,EAAEH,MAAML,OAAOS,KAAP,CAAaC,QAArB,EAA+BC,KAAK,cAApC,EAJc;AAK7BC,WAAS,CAAC;AACRC,SAAKb,OAAOS,KAAP,CAAaC,QADV;AAERR,UAAMC,MAFE;AAGRW,iBAAaX,MAHL;AAIRY,iBAAaZ,MAJL;AAKRa,gBAAYb,MALJ;AAMRc,gBAAY,EAAEZ,MAAM,MAAR,EAAgBC,SAAS,CAAC,IAAIY,IAAJ,EAAD,GAAc,IAAE,GAAF,GAAM,EAAN,GAAS,EAAT,GAAY,EAAZ,GAAe,IAAtD,EANJ;AAORC,YAAQ,EAAEd,MAAMe,OAAR,EAAiBd,SAAS,IAA1B;AAPA,GAAD,CALoB;AAc7Be,gBAAc,CAAC;AACbR,SAAKb,OAAOS,KAAP,CAAaC,QADL;AAEbR,UAAMC,MAFO;AAGbmB,gBAAYnB,MAHC;AAIbW,iBAAaX,MAJA;AAKboB,kBAAc,EAAElB,MAAMF,MAAR,EAAgBG,SAAS,OAAzB,EALD;AAMbkB,YAAQ,CAAC;AACPC,UAAItB,MADG;AAEPD,YAAMC,MAFC;AAGPmB,kBAAYnB,MAHL;AAIPI,gBAAUa,OAJH;AAKPM,iBAAWN,OALJ;AAMPf,YAAM,EAAEA,MAAMF,MAAR,EAAgBG,SAAS,MAAzB,EANC;AAOPqB,aAAO;AACLtB,cAAMF,MADD;AAELyB,kBAAUzB,MAFL;AAGL0B,qBAAa;AACXC,2BAAiB,CAAC3B,MAAD;AADN;AAHR,OAPA;AAcP0B,mBAAa;AACXC,yBAAiB,CAAC3B,MAAD,CADN,EACgB;AAC3B;AACA;AACA4B,YAAI,CAAC5B,MAAD,CAJO;AAKX;AACA;AACA6B,2BAAmB7B,MAPR;AAQX;AACA;AACA8B,cAAM;AACJC,eAAKC,MADD;AAEJC,eAAKD;AAFD,SAVK;AAcXE,eAAO;AACLH,eAAKC,MADA;AAELC,eAAKD;AAFA,SAdI;AAkBXG,gBAAQ;AACNC,mBAASpC,MADH;AAENqC,iBAAOrC;AAFD,SAlBG;AAsBXsC,gBAAQrB;AAtBG;AAdN,KAAD;AANK,GAAD,CAde;AA4D7BsB,WAAS,CAAC,EAAErC,MAAML,OAAOS,KAAP,CAAaC,QAArB,EAA+BC,KAAK,OAApC,EAAD,CA5DoB;AA6D7BgC,UAAQ,CAAC,EAAEtC,MAAML,OAAOS,KAAP,CAAaC,QAArB,EAA+BC,KAAK,OAApC,EAAD,CA7DqB;AA8D7BiC,aAAW,EAAEvC,MAAM,MAAR,EAAgBC,SAASY,KAAK2B,GAA9B,EAAmCtC,UAAU,IAA7C,EA9DkB;AA+D7BuC,aAAW,EAAEzC,MAAM,MAAR,EAAgBC,SAASY,KAAK2B,GAA9B,EAAmCtC,UAAU,IAA7C;AA/DkB,CAAX,EAgEjB,EAAEwC,YAAY,IAAd,EAhEiB,CAApB;;AAmEA,IAAMC,QAAQlD,SAASmD,KAAT,CAAe,OAAf,EAAwBhD,WAAxB,CAAd;;AAEAiD,OAAOC,OAAP,GAAiBH,KAAjB","file":"Space.js","sourcesContent":["const mongoose = require('mongoose');\nconst Schema = mongoose.Schema;\n\nconst spaceSchema = new Schema({\n  name: String,\n  defaultLocale: { type: String, default: 'en', required: true },\n  // users: [{ type: Schema.Types.ObjectId, ref: 'User' }],\n  organization : { type: Schema.Types.ObjectId, ref: 'Organization' },\n  apiKeys: [{\n    _id: Schema.Types.ObjectId,\n    name: String,\n    description: String,\n    deliveryKey: String,\n    previewKey: String,\n    expireDate: { type: 'Date', default: +new Date() + 5*365*24*60*60*1000 },\n    active: { type: Boolean, default: true },\n  }],\n  contentTypes: [{\n    _id: Schema.Types.ObjectId,\n    name: String,\n    identifier: String,\n    description: String,\n    displayField: { type: String, default: 'title' },\n    fields: [{\n      id: String,\n      name: String,\n      identifier: String,\n      required: Boolean,\n      localized: Boolean,\n      type: { type: String, default: 'Text' },\n      items: {\n        type: String,\n        linkType: String,\n        validations: {\n          linkContentType: [String],\n        },\n      },\n      validations: {\n        linkContentType: [String], // Link to another contentType\n        // Takes an array of values and validates that the field\n        //  value is in this array.\n        in: [String],\n        // Takes a MIME type group name and validates that\n        // the link points to an asset of this group\n        linkMimetypeGroup: String,\n        // Takes optional min and max parameters and validates\n        // the size of the array (number of objects in it).\n        size: {\n          min: Number,\n          max: Number,\n        },\n        range: {\n          min: Number,\n          max: Number,\n        },\n        regexp: {\n          pattern: String,\n          flags: String,\n        },\n        unique: Boolean,\n      },\n    }],\n  }],\n  entries: [{ type: Schema.Types.ObjectId, ref: 'Entry' }],\n  assets: [{ type: Schema.Types.ObjectId, ref: 'Asset' }],\n  createdAt: { type: 'Date', default: Date.now, required: true },\n  updatedAt: { type: 'Date', default: Date.now, required: true },\n}, { timestamps: true });\n\n\nconst Space = mongoose.model('Space', spaceSchema);\n \nmodule.exports = Space;\n"]}