{"version":3,"sources":["../../../../server/app/controllers/space/apikey.js"],"names":["cuid","require","mongoose","Space","exports","getAllKey","req","res","next","spaceId","params","space_id","findOne","_id","err","space","save","json","title","items","apiKeys","clearAllKey","updateKey","keyId","key_id","name","body","isExisting","find","k","equals","map","apiKey","createKey","objectId","Types","ObjectId","deliveryKey","previewKey","expireDate","expire_date","key","push","item","deleteKey","status","message","filter"],"mappings":"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","file":"apikey.js","sourcesContent":["import _ from 'lodash';\nconst cuid = require('cuid');\nconst mongoose = require('mongoose');\nconst Space = require('../../models/Space');\n\nexports.getAllKey = (req, res, next) => {\n  const spaceId = req.params.space_id;\n  Space.findOne({ _id: spaceId }, (err, space) => {\n    if (err) { return next(err); }\n\n    space.save((err) => {\n      if (err) next(err);\n      res.json({\n        title: 'Keys',\n        items: space.apiKeys,\n      });\n    });\n  });\n};\n\nexports.clearAllKey = (req, res, next) => {\n  const spaceId = req.params.space_id;\n  Space.findOne({ _id: spaceId }, (err, space) => {\n    if (err) { return next(err); }\n\n    space.apiKeys = [];\n\n    space.save((err) => {\n      if (err) next(err);\n      res.json({\n        title: 'Cleared key',\n        space,\n      });\n    });\n  });\n};\n\nexports.updateKey = (req, res, next) => {\n\n  const spaceId = req.params.space_id;\n  const keyId = req.params.key_id;\n  const { name } = req.body;\n\n  Space.findOne({ _id: spaceId }, (err, space) => {\n    if (err) { return next(err); }\n\n    const isExisting = _.find(space.apiKeys, k => k._id.equals(keyId));\n\n    if (isExisting) {\n      // TODO:\n      // Update existing noe\n      space.apiKeys = _.map(space.apiKeys, (apiKey) => {\n\n        if (apiKey._id.equals(keyId)) {\n          return {\n            _id: apiKey._id,\n            name,\n          };\n        }\n        return apiKey;\n      });\n\n      space.save(err => {\n        if (err) next(err);\n        res.json({\n          title: 'Updated key',\n          space,\n        });\n      })\n    }\n  });\n};\n\nexports.createKey = (req, res, next) => {\n\n  const spaceId = req.params.space_id;\n\n  const { name } = req.body;\n  const objectId = mongoose.Types.ObjectId();\n  const deliveryKey = cuid();\n  const previewKey = cuid();\n  const expireDate = req.body.expire_date;\n\n  Space.findOne({ _id: spaceId }, (err, space) => {\n    if (err) { return next(err); }\n\n    const key = {\n      _id: objectId,\n      name: name || space.name,\n      deliveryKey,\n      previewKey,\n      expireDate,\n    };\n\n    space.apiKeys.push(key);\n\n    space.save((err) => {\n      if (err) next(err);\n      res.json({\n        title: 'Added key',\n        item: key,\n        space,\n      });\n    });\n  });\n};\n\n\n// DELETE KEY\nexports.deleteKey = (req, res, next) => {\n  const spaceId = req.params.space_id;\n  const keyId = req.params.key_id;\n\n  Space.findOne({ _id: spaceId }, (err, space) => {\n    if (err) { return next(err); }\n\n    if (!space) {\n      res.json({\n        status: 'UNSUCCESSFUL',\n        message: 'Cannot find space',\n      });\n    } else {\n      space.apiKeys = _.filter(space.apiKeys, apiKey => !apiKey._id.equals(keyId));\n\n      space.save((err) => {\n        if (err) { return next(err); }\n        res.json({\n          status: 'SUCCESSFUL',\n          message: 'Delete apiKey successfully',\n        });\n      });\n    }\n  });\n};\n"]}