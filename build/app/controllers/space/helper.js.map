{"version":3,"sources":["../../../../server/app/controllers/space/helper.js"],"names":["_","require","exports","handleError","err","next","validateField","value","contentTypeField","required","isEmpty","name","get","includes","validations","in","join","fieldType","size","min","max","range","undefined","validateFields","fields","contentType","errors","compact","map","fieldValue","identifier","valid","message"],"mappings":";;AAAA,IAAMA,IAAIC,QAAQ,QAAR,CAAV;;AAEAC,QAAQC,WAAR,GAAsB,UAACC,GAAD,EAAMC,IAAN;AAAA,SAAeA,KAAKD,GAAL,CAAf;AAAA,CAAtB;;AAEA;;;AAGA,IAAME,gBAAgB,SAAhBA,aAAgB,CAACC,KAAD,EAAQC,gBAAR,EAA6B;AACjD;AACA,MAAIA,iBAAiBC,QAAjB,IAA6BT,EAAEU,OAAF,CAAUH,KAAV,CAAjC,EAAmD,OAAUC,iBAAiBG,IAA3B;;AAEnD;AACA,MAAI,CAACX,EAAEU,OAAF,CAAUV,EAAEY,GAAF,CAAMJ,gBAAN,EAAwB,gBAAxB,CAAV,CAAL,EAA2D;AACzD,QAAI,CAACR,EAAEa,QAAF,CAAWL,iBAAiBM,WAAjB,CAA6BC,EAAxC,EAA4CR,KAA5C,CAAL,EAAyD,OAAUC,iBAAiBG,IAA3B,wBAAkDX,EAAEgB,IAAF,CAAOR,iBAAiBM,WAAjB,CAA6BC,EAApC,EAAwC,GAAxC,CAAlD;AAC1D;;AAED;AACA;AACA;;AAEA;AACA,MAAIf,EAAEa,QAAF,CAAW,CAAC,OAAD,EAAU,QAAV,CAAX,EAAgCL,iBAAiBS,SAAjD,KAA+D,CAACjB,EAAEU,OAAF,CAAUF,iBAAiBU,IAA3B,CAApE,EAAsG;AACpG,QAAMC,MAAMnB,EAAEY,GAAF,CAAMJ,gBAAN,EAAwB,sBAAxB,CAAZ;AACA,QAAMY,MAAMpB,EAAEY,GAAF,CAAMJ,gBAAN,EAAwB,sBAAxB,CAAZ;AACA,QAAIR,EAAEkB,IAAF,CAAOX,KAAP,IAAgBY,GAAhB,IAAuBnB,EAAEkB,IAAF,CAAOX,KAAP,IAAgBa,GAA3C,EAAgD,OAAUZ,iBAAiBG,IAA3B,gCAA0DQ,GAA1D,aAAqEC,GAArE;AACjD;;AAED;AACA,MAAIZ,iBAAiBS,SAAjB,KAA+B,QAA/B,IAA2C,CAACjB,EAAEU,OAAF,CAAUF,iBAAiBa,KAA3B,CAAhD,EAAmF;AACjF,QAAMF,OAAMnB,EAAEY,GAAF,CAAMJ,gBAAN,EAAwB,uBAAxB,CAAZ;AACA,QAAMY,OAAMpB,EAAEY,GAAF,CAAMJ,gBAAN,EAAwB,uBAAxB,CAAZ;AACA,QAAIR,EAAEkB,IAAF,CAAOX,KAAP,IAAgBY,IAAhB,IAAuBnB,EAAEkB,IAAF,CAAOX,KAAP,IAAgBa,IAA3C,EAAgD,OAAUZ,iBAAiBG,IAA3B,iCAA2DQ,IAA3D,aAAsEC,IAAtE;AACjD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,SAAOE,SAAP;AACD,CAzCD;;AA2CApB,QAAQqB,cAAR,GAAyB,UAACC,MAAD,EAASC,WAAT,EAAyB;AAChD,MAAMC,SAAS1B,EAAE2B,OAAF,CAAU3B,EAAE4B,GAAF,CAAMH,YAAYD,MAAlB,EAA0B,UAAChB,gBAAD,EAAsB;AACvE,QAAMqB,aAAa7B,EAAEY,GAAF,CAAMY,MAAN,EAAchB,iBAAiBsB,UAA/B,CAAnB;AACA,WAAOxB,cAAcuB,UAAd,EAA0BrB,gBAA1B,CAAP;AACD,GAHwB,CAAV,CAAf;AAIA,SAAOR,EAAEkB,IAAF,CAAOQ,MAAP,IAAiB,CAAjB,GAAqB,EAAEK,OAAO,KAAT,EAAgBC,SAASN,MAAzB,EAArB,GAAyD,EAAEK,OAAO,IAAT,EAAeC,SAAS,EAAxB,EAAhE;AACD,CAND","file":"helper.js","sourcesContent":["const _ = require('lodash');\n\nexports.handleError = (err, next) => next(err);\n\n/**\n * Field Validation Helpers\n */\nconst validateField = (value, contentTypeField) => {\n  // Check require\n  if (contentTypeField.required && _.isEmpty(value)) return `${contentTypeField.name} is required`;\n\n  // Check 'in'\n  if (!_.isEmpty(_.get(contentTypeField, 'validations.in'))) {\n    if (!_.includes(contentTypeField.validations.in, value)) return `${contentTypeField.name} must be one of ${_.join(contentTypeField.validations.in, ',')}`;\n  }\n\n  // Check MIME\n  // TODO\n  // if (contentTypeField.fieldType === 'assets' && )\n\n  // Size (Array, String)\n  if (_.includes(['Array', 'String'], contentTypeField.fieldType) && !_.isEmpty(contentTypeField.size)) {\n    const min = _.get(contentTypeField, 'validations.size.min');\n    const max = _.get(contentTypeField, 'validations.size.max');\n    if (_.size(value) < min || _.size(value) > max) return `${contentTypeField.name} size should be between ${min} and ${max}`;\n  }\n\n  // Range (Number)\n  if (contentTypeField.fieldType === 'Number' && !_.isEmpty(contentTypeField.range)) {\n    const min = _.get(contentTypeField, 'validations.range.min');\n    const max = _.get(contentTypeField, 'validations.range.max');\n    if (_.size(value) < min || _.size(value) > max) return `${contentTypeField.name} range should be between ${min} and ${max}`;\n  }\n\n  // RegExp\n  // TODO\n  // if (!_.isEmpty(_.get(contentTypeField, 'validations.regexp'))) {\n  //   const pattern = _.get(contentTypeField, 'validations.regexp.pattern');\n  //   const flags = _.get(contentTypeField, 'validations.regexp.flags');\n  //\n  //   const re = new RegExp(pattern, flags);\n  //   if (!re.test(value)) return `${contentTypeField.name} regular expression fail`;\n  // }\n\n  // Unique\n  // TODO\n\n  return undefined;\n};\n\nexports.validateFields = (fields, contentType) => {\n  const errors = _.compact(_.map(contentType.fields, (contentTypeField) => {\n    const fieldValue = _.get(fields, contentTypeField.identifier);\n    return validateField(fieldValue, contentTypeField);\n  }));\n  return _.size(errors) > 0 ? { valid: false, message: errors } : { valid: true, message: '' };\n};\n"]}