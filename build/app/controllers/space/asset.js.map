{"version":3,"sources":["../../../../server/app/controllers/space/asset.js"],"names":["mongoose","require","_","Asset","Space","_helper","exports","getAllAssets","req","res","next","spaceId","params","space_id","findOne","_id","populate","exec","err","space","json","items","assets","getSingleAsset","assetId","asset_id","asset","item","updateAsset","fields","body","console","log","isExistingInSpace","find","equals","save","err1","handleError","status","detail","newAsset","_spaceId","errorSaveAsset","push","err2","createAsset","Types","ObjectId","deleteAsset","remove","filter","truncateAsset"],"mappings":"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","file":"asset.js","sourcesContent":["const mongoose = require('mongoose');\nconst _ = require('lodash');\n\nconst Asset = require('../../models/Asset');\nconst Space = require('../../models/Space');\n\nconst _helper = require('./helper');\n\n/**\n * Assets\n */\nexports.getAllAssets = (req, res, next) => {\n  const spaceId = req.params.space_id;\n  Space.findOne({ _id: spaceId }).populate('assets').exec((err, space) => {\n    if (err) { return next(err); }\n    res.json({\n      items: space.assets,\n    });\n  });\n};\n\nexports.getSingleAsset = (req, res, next) => {\n  const assetId = req.params.asset_id;\n  Asset.findOne({ _id: assetId }, (err, asset) => {\n    if (err) { return next(err); }\n    res.json({\n      item: asset,\n    });\n  });\n}\n\n// UPDATE CONTENT TYPE\nconst updateAsset = (req, res, next) => {\n  const spaceId = req.params.space_id;\n  const assetId = req.params.asset_id;\n  const fields = req.body.fields;\n  console.log('updateAsset', spaceId, assetId, fields);\n\n  Space.findOne({ _id: spaceId }, (err, space) => {\n    if (err) { return next(err); }\n\n\n    const isExistingInSpace = _.find(space.assets, (asset) => {\n      console.log('asset', asset, assetId, asset.equals(assetId));\n      return asset.equals(assetId);\n    });\n    console.log('isExistingInSpace', isExistingInSpace);\n    if (isExistingInSpace) {\n\n      // Update asset\n      Asset.findOne({ _id: assetId }, (err, asset) => {\n        asset.fields = fields;\n        console.log('updateExistingAsset', asset);\n        asset.save((err1) => {\n          if (err1) {\n            console.log(err1);\n            return _helper.handleError(err1, next);\n          }\n          res.json({\n            status: 'SUCCESS',\n            detail: 'Updating asset successfully',\n            asset,\n          });\n        });\n      });\n    } else {\n      // 1. Create and Insert new asset\n      // 2. Update spaces.asset\n      const newAsset = new Asset({\n        fields,\n        status: 'draft',\n        _spaceId: spaceId,\n      });\n      console.log('newAsset', newAsset);\n\n      newAsset.save((errorSaveAsset) => {\n        if (errorSaveAsset) return _helper.handleError(errorSaveAsset, next);\n\n        // Update space\n        space.assets.push(newAsset._id);\n        space.save((err2) => {\n          if (err2) { return next(err2); }\n          res.json({\n            status: 'SUCCESS',\n            detail: 'Create new asset successfully',\n            asset: newAsset,\n          });\n        });\n      });\n    }\n  });\n};\n\nexports.updateAsset = updateAsset;\n\n// CREATE CONTENT TYPE\nexports.createAsset = (req, res, next) => {\n  // Create new objectId\n  const assetId = mongoose.Types.ObjectId();\n  req.params.asset_id = assetId;\n  return updateAsset(req, res, next);\n};\n\nexports.deleteAsset = (req, res, next) => {\n  const spaceId = req.params.space_id;\n  const assetId = req.params.asset_id;\n  Asset.remove({ _id: assetId }, (err) => {\n    if (err) return _helper.handleError(err, next);\n\n    // Remove asset ref from space\n    Space.findOne({ _id: spaceId }, (err, space) => {\n      if (err) return _helper.handleError(err, next);\n      space.assets = _.filter(space.assets, _id => !_id.equals(assetId));\n\n      space.save((err2) => {\n        if (err2) return _helper.handleError(err2, next);\n        res.json({\n          status: 'SUCCESS',\n          detail: 'delete asset successfully',\n        });\n      });\n    });\n  });\n};\n\nexports.truncateAsset = (req, res, next) => {\n  const spaceId = req.params.space_id;\n  Space.findOne({ _id: spaceId }, (err, space) => {\n    if (err) { return next(err); }\n    space.assets = [];\n    space.save((err) => {\n      if (err) return _helper.handleError(err, next);\n\n      Asset.remove({ _spaceId: spaceId }, (err2) => {\n        if (err2) return _helper.handleError(err2, next);\n        res.json({\n          status: 'SUCCESS',\n          detail: 'clear all assets in space successfully',\n          space,\n        });\n      });\n    });\n  });\n};\n"]}