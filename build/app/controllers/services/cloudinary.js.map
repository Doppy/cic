{"version":3,"sources":["../../../../server/app/controllers/services/cloudinary.js"],"names":["request","require","cloudinary","fs","CLOUDINARY_CLOUDNAME","process","env","CLOUDINARY_APIKEY","CLOUDINARY_APISECRET","config","cloud_name","api_key","api_secret","upload","req","res","file","path","uploader","result","json","unlink","getRealParamKey","key","convertStringToObject","reduce","split","str","all","item","value","realKey","getImage","publicId","params","public_id","paramString","param","paramsObject","imgUrl","url","pipe","module","exports"],"mappings":";;;;;;AAAA;;;;;;;;AAEA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,aAAaD,QAAQ,YAAR,CAAnB;AACA,IAAME,KAAKF,QAAQ,IAAR,CAAX;;AAEA;AACA,IAAMG,uBAAuBC,QAAQC,GAAR,CAAYF,oBAAzC;AACA,IAAMG,oBAAoBF,QAAQC,GAAR,CAAYC,iBAAtC;AACA,IAAMC,uBAAuBH,QAAQC,GAAR,CAAYE,oBAAzC;;AAEAN,WAAWO,MAAX,CAAkB;AAChBC,cAAYN,oBADI;AAEhBO,WAASJ,iBAFO;AAGhBK,cAAYJ;AAHI,CAAlB;;AAMA,IAAMK,SAAS,SAATA,MAAS,CAACC,GAAD,EAAMC,GAAN,EAAc;AAC3B,MAAMC,OAAOF,IAAIE,IAAJ,CAASC,IAAtB;AACAf,aAAWgB,QAAX,CAAoBL,MAApB,CAA2BG,IAA3B,EAAiC,UAACG,MAAD,EAAY;AAC3CJ,QAAIK,IAAJ,CAASD,MAAT;AACAhB,OAAGkB,MAAH,CAAUL,IAAV;AACD,GAHD;AAID,CAND;;AAQA,IAAMM,kBAAkB,SAAlBA,eAAkB,CAACC,GAAD,EAAS;AAC/B,UAAQA,GAAR;AACE,SAAK,GAAL;AAAU,aAAO,OAAP;AACV,SAAK,GAAL;AAAU,aAAO,QAAP;AACV,SAAK,GAAL;AAAU,aAAO,MAAP;AACV,SAAK,GAAL;AAAU,aAAO,SAAP;AACV;AAAS,aAAOA,GAAP;AALX;AAOD,CARD;;AAUA,IAAMC,wBAAwB,SAAxBA,qBAAwB;AAAA,SAC5B,iBAAEC,MAAF,CAAS,iBAAEC,KAAF,CAAQC,GAAR,EAAa,GAAb,CAAT,EAA4B,UAACC,GAAD,EAAMC,IAAN,EAAe;AAAA,kBACpB,iBAAEH,KAAF,CAAQG,IAAR,EAAc,GAAd,CADoB;AAAA;AAAA,QAClCN,GADkC;AAAA,QAC7BO,KAD6B;;AAEzC,QAAMC,UAAUT,gBAAgBC,GAAhB,CAAhB;AACA,wBACKK,GADL,sBAEGG,OAFH,EAEaD,KAFb;AAID,GAPD,EAOG,EAPH,CAD4B;AAAA,CAA9B;;AAUA,IAAME,WAAW,SAAXA,QAAW,CAAClB,GAAD,EAAMC,GAAN,EAAc;AAC7B,MAAMkB,WAAWnB,IAAIoB,MAAJ,CAAWC,SAA5B;AACA,MAAMC,cAActB,IAAIoB,MAAJ,CAAWG,KAA/B;AACA,MAAMC,eAAed,sBAAsBY,WAAtB,CAArB;AACA,MAAMG,SAASrC,WAAWsC,GAAX,CAAeP,QAAf,EAAyBK,YAAzB,CAAf;AACAtC,UAAQuC,MAAR,EAAgBE,IAAhB,CAAqB1B,GAArB;AACD,CAND;;AAQA2B,OAAOC,OAAP,GAAiB;AACfX,oBADe;AAEfnB;AAFe,CAAjB","file":"cloudinary.js","sourcesContent":["import _ from 'lodash';\n\nconst request = require('request');\nconst cloudinary = require('cloudinary');\nconst fs = require('fs');\n\n/* Cloudinary */\nconst CLOUDINARY_CLOUDNAME = process.env.CLOUDINARY_CLOUDNAME;\nconst CLOUDINARY_APIKEY = process.env.CLOUDINARY_APIKEY;\nconst CLOUDINARY_APISECRET = process.env.CLOUDINARY_APISECRET;\n\ncloudinary.config({\n  cloud_name: CLOUDINARY_CLOUDNAME,\n  api_key: CLOUDINARY_APIKEY,\n  api_secret: CLOUDINARY_APISECRET,\n});\n\nconst upload = (req, res) => {\n  const file = req.file.path;\n  cloudinary.uploader.upload(file, (result) => {\n    res.json(result);\n    fs.unlink(file);\n  });\n};\n\nconst getRealParamKey = (key) => {\n  switch (key) {\n    case 'w': return 'width';\n    case 'h': return 'height';\n    case 'c': return 'crop';\n    case 'g': return 'gravity';\n    default: return key;\n  }\n};\n\nconst convertStringToObject = str =>\n  _.reduce(_.split(str, ','), (all, item) => {\n    const [key, value] = _.split(item, '_');\n    const realKey = getRealParamKey(key);\n    return {\n      ...all,\n      [realKey]: value,\n    };\n  }, {});\n\nconst getImage = (req, res) => {\n  const publicId = req.params.public_id;\n  const paramString = req.params.param;\n  const paramsObject = convertStringToObject(paramString);\n  const imgUrl = cloudinary.url(publicId, paramsObject);\n  request(imgUrl).pipe(res);\n};\n\nmodule.exports = {\n  getImage,\n  upload,\n};\n"]}