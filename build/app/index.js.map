{"version":3,"sources":["../../server/app/index.js"],"names":["require","_","moment","express","flash","compression","session","bodyParser","expressValidator","jwt","jwks","dotenv","logger","chalk","MongoStore","path","mongoose","multer","Space","upload","dest","join","__dirname","load","spaceController","contentTypeController","entryController","apiKeyController","assetController","organizationController","cloudinaryController","app","Promise","global","connect","process","env","MONGODB_URI","MONGOLAB_URI","connection","on","console","log","red","exit","set","PORT","use","json","urlencoded","extended","allowCrossDomain","req","res","next","header","resave","saveUninitialized","secret","SESSION_SECRET","store","url","autoReconnect","locals","user","contentManagementAuthentication","NODE_ENV","expressJwtSecret","cache","rateLimit","jwksRequestsPerMinute","jwksUri","handleSigningKeyError","err","cb","SigningKeyNotFoundError","Error","audience","issuer","algorithms","contentDeliveryAuthentication","token","replace","get","spaceId","params","space_id","accessToken","query","access_token","findOne","_id","space","status","send","code","message","apiKeysActive","filter","apiKeys","item","active","length","theKey","find","deliveryKey","isBefore","expireDate","apiPrefix","getAllEntries","getSingleEntry","getSingle","getAllContentTypes","getSingleContentType","getAll","post","createOrganization","getAllMemberOrganization","createMemberOrganization","delete","delMemberOrganization","createSpace","put","updateSpace","deleteSpace","createContentType","updateContentType","deleteContentType","createEntry","updateEntry","deleteEntry","truncateEntry","getAllKey","createKey","updateKey","clearAllKey","deleteKey","getSingleAsset","createAsset","updateAsset","deleteAsset","truncateAsset","single","getImage","static","sendFile","listen","green","module","exports"],"mappings":";;AAAAA,QAAQ,gBAAR;AACAA,QAAQ,gBAAR;;AAEA,IAAMC,IAAID,QAAQ,QAAR,CAAV;AACA,IAAME,SAASF,QAAQ,QAAR,CAAf;AACA,IAAMG,UAAUH,QAAQ,SAAR,CAAhB;AACA,IAAMI,QAAQJ,QAAQ,eAAR,CAAd;AACA,IAAMK,cAAcL,QAAQ,aAAR,CAApB;AACA,IAAMM,UAAUN,QAAQ,iBAAR,CAAhB;AACA,IAAMO,aAAaP,QAAQ,aAAR,CAAnB;AACA,IAAMQ,mBAAmBR,QAAQ,mBAAR,CAAzB;;AAEA;AACA,IAAMS,MAAMT,QAAQ,aAAR,CAAZ;AACA,IAAMU,OAAOV,QAAQ,UAAR,CAAb;;AAGA,IAAMW,SAASX,QAAQ,QAAR,CAAf;AACA,IAAMY,SAASZ,QAAQ,QAAR,CAAf;AACA,IAAMa,QAAQb,QAAQ,OAAR,CAAd;;AAEA;AACA,IAAMc,aAAad,QAAQ,eAAR,EAAyBM,OAAzB,CAAnB;AACA,IAAMS,OAAOf,QAAQ,MAAR,CAAb;AACA,IAAMgB,WAAWhB,QAAQ,UAAR,CAAjB;AACA,IAAMiB,SAASjB,QAAQ,QAAR,CAAf;;AAEA,IAAMkB,QAAQlB,QAAQ,gBAAR,CAAd;;AAEA,IAAMmB,SAASF,OAAO,EAAEG,MAAML,KAAKM,IAAL,CAAUC,SAAV,EAAqB,SAArB,CAAR,EAAP,CAAf;;AAGAX,OAAOY,IAAP,CAAY,EAAER,MAAM,MAAR,EAAZ;;AAGA,IAAMS,kBAAkBxB,QAAQ,qBAAR,CAAxB;AACA,IAAMyB,wBAAwBzB,QAAQ,iCAAR,CAA9B;AACA,IAAM0B,kBAAkB1B,QAAQ,2BAAR,CAAxB;AACA,IAAM2B,mBAAmB3B,QAAQ,4BAAR,CAAzB;AACA,IAAM4B,kBAAkB5B,QAAQ,2BAAR,CAAxB;;AAEA,IAAM6B,yBAAyB7B,QAAQ,oCAAR,CAA/B;;AAEA,IAAM8B,uBAAuB9B,QAAQ,mCAAR,CAA7B;;AAGA;;;AAGA,IAAM+B,MAAM5B,SAAZ;;AAEA;;;AAGAa,SAASgB,OAAT,GAAmBC,OAAOD,OAA1B;AACAhB,SAASkB,OAAT,CAAiBC,QAAQC,GAAR,CAAYC,WAAZ,IAA2BF,QAAQC,GAAR,CAAYE,YAAxD;AACAtB,SAASuB,UAAT,CAAoBC,EAApB,CAAuB,OAAvB,EAAgC,YAAM;AACpCC,UAAQC,GAAR,CAAY,mEAAZ,EAAiF7B,MAAM8B,GAAN,CAAU,GAAV,CAAjF;AACAR,UAAQS,IAAR;AACD,CAHD;;AAKAb,IAAIc,GAAJ,CAAQ,MAAR,EAAgBV,QAAQC,GAAR,CAAYU,IAAZ,IAAoB,IAApC;AACAf,IAAIgB,GAAJ,CAAQ1C,aAAR;AACA0B,IAAIgB,GAAJ,CAAQvC,kBAAR;AACAuB,IAAIgB,GAAJ,CAAQxC,WAAWyC,IAAX,EAAR;AACAjB,IAAIgB,GAAJ,CAAQxC,WAAW0C,UAAX,CAAsB,EAAEC,UAAU,IAAZ,EAAtB,CAAR;;AAEA;AACA,IAAMC,mBAAmB,SAAnBA,gBAAmB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC3CD,MAAIE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,MAAIE,MAAJ,CAAW,8BAAX,EAA2C,kCAA3C;AACAF,MAAIE,MAAJ,CAAW,8BAAX,EAA2C,mFAA3C;AACAD;AACD,CALD;;AAOAvB,IAAIgB,GAAJ,CAAQI,gBAAR;;AAEApB,IAAIgB,GAAJ,CAAQzC,QAAQ;AACdkD,UAAQ,IADM;AAEdC,qBAAmB,IAFL;AAGdC,UAAQvB,QAAQC,GAAR,CAAYuB,cAHN;AAIdC,SAAO,IAAI9C,UAAJ,CAAe;AACpB+C,SAAK1B,QAAQC,GAAR,CAAYC,WAAZ,IAA2BF,QAAQC,GAAR,CAAYE,YADxB;AAEpBwB,mBAAe;AAFK,GAAf;AAJO,CAAR,CAAR;;AAUA/B,IAAIgB,GAAJ,CAAQ3C,OAAR;AACA2B,IAAIgB,GAAJ,CAAQnC,OAAO,KAAP,CAAR;;AAEAmB,IAAIgB,GAAJ,CAAQ,UAACK,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1BD,MAAIU,MAAJ,CAAWC,IAAX,GAAkBZ,IAAIY,IAAtB;AACAV;AACD,CAHD;;AAKA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAMW,kCAAkC9B,QAAQC,GAAR,CAAY8B,QAAZ,KAAyB,MAAzB,GAAkCzD,IAAI;AAC5EiD,UAAQhD,KAAKyD,gBAAL,CAAsB;AAC5BC,WAAO,IADqB;AAE5BC,eAAW,IAFiB;AAG5BC,2BAAuB,CAHK;AAI5BC,aAAS,mDAJmB;AAK5BC,2BAAuB,+BAACC,GAAD,EAAMC,EAAN,EAAa;AAClC,UAAID,eAAe/D,KAAKiE,uBAAxB,EAAiD;AAC/C,eAAOD,GAAG,IAAIE,KAAJ,CAAU,aAAV,CAAH,CAAP;AACD;AACD,aAAOF,GAAGD,GAAH,CAAP;AACD;AAV2B,GAAtB,CADoE;AAa5EI,YAAU,oBAbkE;AAc5EC,UAAQ,8BAdoE;AAe5EC,cAAY,CAAC,OAAD;AAfgE,CAAJ,CAAlC,GAgBnCtE,IAAI,EAAEiD,QAAQ,SAAV,EAAJ,CAhBL;;AAkBA,IAAMsB,gCAAgC,SAAhCA,6BAAgC,CAAC5B,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxD,MAAM2B,QAAQhF,EAAEiF,OAAF,CAAU9B,IAAI+B,GAAJ,CAAQ,eAAR,CAAV,EAAoC,SAApC,EAA+C,EAA/C,CAAd;AACA,MAAIF,UAAU,EAAd,EAAkB;AAChBhB,oCAAgCb,GAAhC,EAAqCC,GAArC,EAA0CC,IAA1C;AACA;AACD;;AAED,MAAM8B,UAAUhC,IAAIiC,MAAJ,CAAWC,QAA3B;AACA,MAAMC,cAAcnC,IAAIoC,KAAJ,CAAUC,YAA9B;;AAEAvE,QAAMwE,OAAN,CAAc,EAAEC,KAAKP,OAAP,EAAd,EAAgC,UAACX,GAAD,EAAMmB,KAAN,EAAgB;AAC9C,QAAInB,GAAJ,EAAS;AACPpB,UAAIwC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,cAAM,GADa;AAEnBC,iBAAS;AAFU,OAArB;AAID;;AAED,QAAMC,gBAAgBhG,EAAEiG,MAAF,CAASN,MAAMO,OAAf,EAAwB;AAAA,aAAQC,KAAKC,MAAL,KAAgB,IAAxB;AAAA,KAAxB,CAAtB;AACA,QAAIJ,cAAcK,MAAd,GAAuB,CAA3B,EAA8B;AAC5B,UAAMC,SAASN,cAAcO,IAAd,CAAmB;AAAA,eAAQJ,KAAKK,WAAL,KAAqBlB,WAA7B;AAAA,OAAnB,CAAf;AACA,UAAIgB,UAAUrG,SAASwG,QAAT,CAAkBH,OAAOI,UAAzB,CAAd,EAAoD;AAClDrD;AACD,OAFD,MAEO;AACLD,YAAIwC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,gBAAM,GADa;AAEnBC,mBAAS;AAFU,SAArB;AAID;AACF,KAVD,MAUO;AACL3C,UAAIwC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,cAAM,GADa;AAEnBC,iBAAS;AAFU,OAArB;AAID;AACF,GAzBD;AA0BD,CApCD;;AAsCA,IAAMY,YAAY,KAAlB;;AAEA7E,IAAIoD,GAAJ,CAAWyB,SAAX,gCAAiD5B,6BAAjD,EAAgFtD,gBAAgBmF,aAAhG;AACA9E,IAAIoD,GAAJ,CAAWyB,SAAX,0CAA2D5B,6BAA3D,EAA0FtD,gBAAgBoF,cAA1G;;AAEA/E,IAAIoD,GAAJ,CAAWyB,SAAX,wBAAyC5B,6BAAzC,EAAwExD,gBAAgBuF,SAAxF;AACAhF,IAAIoD,GAAJ,CAAWyB,SAAX,sCAAuD5B,6BAAvD,EAAsFvD,sBAAsBuF,kBAA5G;AACAjF,IAAIoD,GAAJ,CAAWyB,SAAX,uDAAwE5B,6BAAxE,EAAuGvD,sBAAsBwF,oBAA7H;AACAlF,IAAIoD,GAAJ,CAAWyB,SAAX,gCAAiD5B,6BAAjD,EAAgFtD,gBAAgBmF,aAAhG;AACA9E,IAAIoD,GAAJ,CAAWyB,SAAX,0CAA2D5B,6BAA3D,EAA0FtD,gBAAgBoF,cAA1G;;AAEA/E,IAAIoD,GAAJ,CAAWyB,SAAX,qBAAsC3C,+BAAtC,EAAuEpC,uBAAuBqF,MAA9F;AACAnF,IAAIoD,GAAJ,CAAWyB,SAAX,sCAAuD3C,+BAAvD,EAAwFpC,uBAAuBkF,SAA/G;AACAhF,IAAIoF,IAAJ,CAAYP,SAAZ,qBAAuC3C,+BAAvC,EAAwEpC,uBAAuBuF,kBAA/F;AACArF,IAAIoD,GAAJ,CAAWyB,SAAX,8CAA+D3C,+BAA/D,EAAgGpC,uBAAuBwF,wBAAvH,E,CAAkJ;AAClJtF,IAAIoF,IAAJ,CAAYP,SAAZ,8CAAgE3C,+BAAhE,EAAiGpC,uBAAuByF,wBAAxH,E,CAAkJ;AAClJvF,IAAIwF,MAAJ,CAAcX,SAAd,uDAA2E3C,+BAA3E,EAA4GpC,uBAAuB2F,qBAAnI,E,CAA0J;;AAE1J;;AAEA;;;AAGAzF,IAAIoD,GAAJ,CAAWyB,SAAX,eAAgC3C,+BAAhC,EAAiEzC,gBAAgB0F,MAAjF;AACAnF,IAAIoF,IAAJ,CAAYP,SAAZ,cAAgC3C,+BAAhC,EAAiEzC,gBAAgBiG,WAAjF;AACA1F,IAAI2F,GAAJ,CAAWd,SAAX,wBAAyC3C,+BAAzC,EAA0EzC,gBAAgBmG,WAA1F;AACA5F,IAAIwF,MAAJ,CAAcX,SAAd,wBAA4C3C,+BAA5C,EAA6EzC,gBAAgBoG,WAA7F;;AAEA7F,IAAIoF,IAAJ,CAAYP,SAAZ,uCAAyD3C,+BAAzD,EAA0FxC,sBAAsBoG,iBAAhH;AACA9F,IAAI2F,GAAJ,CAAWd,SAAX,uDAAwE3C,+BAAxE,EAAyGxC,sBAAsBqG,iBAA/H;AACA/F,IAAIwF,MAAJ,CAAcX,SAAd,uDAA2E3C,+BAA3E,EAA4GxC,sBAAsBsG,iBAAlI;;AAEA;AACAhG,IAAIoF,IAAJ,CAAYP,SAAZ,iCAAmD3C,+BAAnD,EAAoFvC,gBAAgBsG,WAApG;AACAjG,IAAI2F,GAAJ,CAAWd,SAAX,0CAA2D3C,+BAA3D,EAA4FvC,gBAAgBuG,WAA5G;AACAlG,IAAIwF,MAAJ,CAAcX,SAAd,0CAA8D3C,+BAA9D,EAA+FvC,gBAAgBwG,WAA/G;AACAnG,IAAIwF,MAAJ,CAAcX,SAAd,0CAA8D3C,+BAA9D,EAA+FvC,gBAAgByG,aAA/G;;AAEA;AACApG,IAAIoD,GAAJ,CAAWyB,SAAX,iCAAkD3C,+BAAlD,EAAmFtC,iBAAiByG,SAApG;AACArG,IAAIoF,IAAJ,CAAYP,SAAZ,iCAAmD3C,+BAAnD,EAAoFtC,iBAAiB0G,SAArG;AACAtG,IAAI2F,GAAJ,CAAWd,SAAX,yCAA0D3C,+BAA1D,EAA2FtC,iBAAiB2G,SAA5G;AACAvG,IAAIwF,MAAJ,CAAcX,SAAd,iCAAqD3C,+BAArD,EAAsFtC,iBAAiB4G,WAAvG;AACAxG,IAAIwF,MAAJ,CAAcX,SAAd,yCAA6D3C,+BAA7D,EAA8FtC,iBAAiB6G,SAA/G;;AAEA;AACAzG,IAAIoD,GAAJ,CAAWyB,SAAX,yCAA0D3C,+BAA1D,EAA2FrC,gBAAgB6G,cAA3G;AACA1G,IAAIoF,IAAJ,CAAYP,SAAZ,gCAAkD3C,+BAAlD,EAAmFrC,gBAAgB8G,WAAnG;AACA3G,IAAI2F,GAAJ,CAAWd,SAAX,yCAA0D3C,+BAA1D,EAA2FrC,gBAAgB+G,WAA3G;AACA5G,IAAIwF,MAAJ,CAAcX,SAAd,yCAA6D3C,+BAA7D,EAA8FrC,gBAAgBgH,WAA9G;AACA7G,IAAIwF,MAAJ,CAAcX,SAAd,yCAA6D3C,+BAA7D,EAA8FrC,gBAAgBiH,aAA9G;;AAEA;AACA9G,IAAIoF,IAAJ,CAAYP,SAAZ,oBAAsCzF,OAAO2H,MAAP,CAAc,MAAd,CAAtC,EAA6DhH,qBAAqBX,MAAlF;AACAY,IAAIoD,GAAJ,CAAWyB,SAAX,gCAAiD9E,qBAAqBiH,QAAtE;;AAGA;AACA;AACA;;;AAGA;;;AAGAhH,IAAIgB,GAAJ,CAAQ5C,QAAQ6I,MAAR,CAAejI,KAAKM,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAf,CAAR;;AAEAS,IAAIoD,GAAJ,CAAQ,IAAR,EAAc,UAAC/B,GAAD,EAAMC,GAAN,EAAc;AAC1BA,MAAI4F,QAAJ,CAAalI,KAAKM,IAAL,CAAUC,SAAV,EAAqB,OAArB,EAA8B,YAA9B,CAAb;AACD,CAFD;;AAIA;;;;AAIAS,IAAImH,MAAJ,CAAWnH,IAAIoD,GAAJ,CAAQ,MAAR,CAAX,EAA4B,YAAM;AAChC1C,UAAQC,GAAR,CAAY,gEAAZ,EAA8E7B,MAAMsI,KAAN,CAAY,GAAZ,CAA9E,EAAgGpH,IAAIoD,GAAJ,CAAQ,MAAR,CAAhG,EAAiHpD,IAAIoD,GAAJ,CAAQ,KAAR,CAAjH;AACA1C,UAAQC,GAAR,CAAY,0BAAZ;AACD,CAHD;;AAMA0G,OAAOC,OAAP,GAAiBtH,GAAjB","file":"index.js","sourcesContent":["require('babel-register');\nrequire('babel-polyfill');\n\nconst _ = require('lodash');\nconst moment = require('moment');\nconst express = require('express');\nconst flash = require('express-flash');\nconst compression = require('compression');\nconst session = require('express-session');\nconst bodyParser = require('body-parser');\nconst expressValidator = require('express-validator');\n\n// const jwtWebToken = require('jsonwebtoken');\nconst jwt = require('express-jwt');\nconst jwks = require('jwks-rsa');\n\n\nconst dotenv = require('dotenv');\nconst logger = require('morgan');\nconst chalk = require('chalk');\n\n// const errorHandler = require('errorhandler');\nconst MongoStore = require('connect-mongo')(session);\nconst path = require('path');\nconst mongoose = require('mongoose');\nconst multer = require('multer');\n\nconst Space = require('./models/Space');\n\nconst upload = multer({ dest: path.join(__dirname, 'uploads') });\n\n\ndotenv.load({ path: '.env' });\n\n\nconst spaceController = require('./controllers/space');\nconst contentTypeController = require('./controllers/space/contentType');\nconst entryController = require('./controllers/space/entry');\nconst apiKeyController = require('./controllers/space/apikey');\nconst assetController = require('./controllers/space/asset');\n\nconst organizationController = require('./controllers/account/organization');\n\nconst cloudinaryController = require('./controllers/services/cloudinary');\n\n\n/**\n * Create Express server.\n */\nconst app = express();\n\n/**\n * Connect to MongoDB.\n */\nmongoose.Promise = global.Promise;\nmongoose.connect(process.env.MONGODB_URI || process.env.MONGOLAB_URI);\nmongoose.connection.on('error', () => {\n  console.log('%s MongoDB connection error. Please make sure MongoDB is running.', chalk.red('✗'));\n  process.exit();\n});\n\napp.set('port', process.env.PORT || 4000);\napp.use(compression());\napp.use(expressValidator());\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\n\n// CORS middleware\nconst allowCrossDomain = (req, res, next) => {\n  res.header('Access-Control-Allow-Origin', '*');\n  res.header('Access-Control-Allow-Methods', 'GET,HEAD,OPTIONS,POST,PUT,DELETE');\n  res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept, Authorization, X-CIC-Content-Type');\n  next();\n};\n\napp.use(allowCrossDomain);\n\napp.use(session({\n  resave: true,\n  saveUninitialized: true,\n  secret: process.env.SESSION_SECRET,\n  store: new MongoStore({\n    url: process.env.MONGODB_URI || process.env.MONGOLAB_URI,\n    autoReconnect: true,\n  }),\n}));\n\napp.use(flash());\napp.use(logger('dev'));\n\napp.use((req, res, next) => {\n  res.locals.user = req.user;\n  next();\n});\n\n/**\n * CIC App codebase: DELIVERY\n */\n\n// app.get('/', (req, res, next) => {\n//   console.log('req.user', req.user);\n//   res.send({ user: req.user });\n// });\n\n// const tokenAuthenticate = jwt({\n//   secret: 'shhhhh'\n// });\nconst contentManagementAuthentication = process.env.NODE_ENV !== 'test' ? jwt({\n  secret: jwks.expressJwtSecret({\n    cache: true,\n    rateLimit: true,\n    jwksRequestsPerMinute: 5,\n    jwksUri: 'https://forviz.au.auth0.com/.well-known/jwks.json',\n    handleSigningKeyError: (err, cb) => {\n      if (err instanceof jwks.SigningKeyNotFoundError) {\n        return cb(new Error('This is bad'));\n      }\n      return cb(err);\n    },\n  }),\n  audience: 'content.forviz.com',\n  issuer: 'https://forviz.au.auth0.com/',\n  algorithms: ['RS256'],\n}) : jwt({ secret: 'testing' });\n\nconst contentDeliveryAuthentication = (req, res, next) => {\n  const token = _.replace(req.get('Authorization'), 'Bearer ', '');\n  if (token !== '') {\n    contentManagementAuthentication(req, res, next);\n    return;\n  }\n\n  const spaceId = req.params.space_id;\n  const accessToken = req.query.access_token;\n\n  Space.findOne({ _id: spaceId }, (err, space) => {\n    if (err) {\n      res.status(401).send({\n        code: 401,\n        message: 'This space id is invalid',\n      });\n    }\n\n    const apiKeysActive = _.filter(space.apiKeys, item => item.active === true);\n    if (apiKeysActive.length > 0) {\n      const theKey = apiKeysActive.find(item => item.deliveryKey === accessToken);\n      if (theKey && moment().isBefore(theKey.expireDate)) {\n        next();\n      } else {\n        res.status(401).send({\n          code: 401,\n          message: 'This token has expired',\n        });\n      }\n    } else {\n      res.status(401).send({\n        code: 401,\n        message: 'This space does not have api key',\n      });\n    }\n  });\n};\n\nconst apiPrefix = '/v1';\n\napp.get(`${apiPrefix}/spaces/:space_id/entries`, contentDeliveryAuthentication, entryController.getAllEntries);\napp.get(`${apiPrefix}/spaces/:space_id/entries/:entry_id`, contentDeliveryAuthentication, entryController.getSingleEntry);\n\napp.get(`${apiPrefix}/spaces/:space_id`, contentDeliveryAuthentication, spaceController.getSingle);\napp.get(`${apiPrefix}/spaces/:space_id/content_types`, contentDeliveryAuthentication, contentTypeController.getAllContentTypes);\napp.get(`${apiPrefix}/spaces/:space_id/content_types/:content_type_id`, contentDeliveryAuthentication, contentTypeController.getSingleContentType);\napp.get(`${apiPrefix}/spaces/:space_id/entries`, contentDeliveryAuthentication, entryController.getAllEntries);\napp.get(`${apiPrefix}/spaces/:space_id/entries/:entry_id`, contentDeliveryAuthentication, entryController.getSingleEntry);\n\napp.get(`${apiPrefix}/organizations`, contentManagementAuthentication, organizationController.getAll);\napp.get(`${apiPrefix}/organizations/:organization_id`, contentManagementAuthentication, organizationController.getSingle);\napp.post(`${apiPrefix}/organizations`, contentManagementAuthentication, organizationController.createOrganization);\napp.get(`${apiPrefix}/organizations/:organization_id/members`, contentManagementAuthentication, organizationController.getAllMemberOrganization); // get all member in organization\napp.post(`${apiPrefix}/organizations/:organization_id/members`, contentManagementAuthentication, organizationController.createMemberOrganization);// add member in organization\napp.delete(`${apiPrefix}/organizations/:organization_id/members/:user_id`, contentManagementAuthentication, organizationController.delMemberOrganization);// delete member in organization\n\n// TODO QUERY entries\n\n/**\n * CIC App codebase: MANAGEMENT\n */\napp.get(`${apiPrefix}/spaces/`, contentManagementAuthentication, spaceController.getAll);\napp.post(`${apiPrefix}/spaces`, contentManagementAuthentication, spaceController.createSpace);\napp.put(`${apiPrefix}/spaces/:space_id`, contentManagementAuthentication, spaceController.updateSpace);\napp.delete(`${apiPrefix}/spaces/:space_id`, contentManagementAuthentication, spaceController.deleteSpace);\n\napp.post(`${apiPrefix}/spaces/:space_id/content_types/`, contentManagementAuthentication, contentTypeController.createContentType);\napp.put(`${apiPrefix}/spaces/:space_id/content_types/:content_type_id`, contentManagementAuthentication, contentTypeController.updateContentType);\napp.delete(`${apiPrefix}/spaces/:space_id/content_types/:content_type_id`, contentManagementAuthentication, contentTypeController.deleteContentType);\n\n// CREATE entry\napp.post(`${apiPrefix}/spaces/:space_id/entries/`, contentManagementAuthentication, entryController.createEntry);\napp.put(`${apiPrefix}/spaces/:space_id/entries/:entry_id`, contentManagementAuthentication, entryController.updateEntry);\napp.delete(`${apiPrefix}/spaces/:space_id/entries/:entry_id`, contentManagementAuthentication, entryController.deleteEntry);\napp.delete(`${apiPrefix}/spaces/:space_id/entries_truncate/`, contentManagementAuthentication, entryController.truncateEntry);\n\n// API Keys\napp.get(`${apiPrefix}/spaces/:space_id/api_keys`, contentManagementAuthentication, apiKeyController.getAllKey);\napp.post(`${apiPrefix}/spaces/:space_id/api_keys`, contentManagementAuthentication, apiKeyController.createKey);\napp.put(`${apiPrefix}/spaces/:space_id/api_keys/:key_id`, contentManagementAuthentication, apiKeyController.updateKey);\napp.delete(`${apiPrefix}/spaces/:space_id/api_keys`, contentManagementAuthentication, apiKeyController.clearAllKey);\napp.delete(`${apiPrefix}/spaces/:space_id/api_keys/:key_id`, contentManagementAuthentication, apiKeyController.deleteKey);\n\n// Assets\napp.get(`${apiPrefix}/spaces/:space_id/assets/:asset_id`, contentManagementAuthentication, assetController.getSingleAsset);\napp.post(`${apiPrefix}/spaces/:space_id/assets/`, contentManagementAuthentication, assetController.createAsset);\napp.put(`${apiPrefix}/spaces/:space_id/assets/:asset_id`, contentManagementAuthentication, assetController.updateAsset);\napp.delete(`${apiPrefix}/spaces/:space_id/assets/:asset_id`, contentManagementAuthentication, assetController.deleteAsset);\napp.delete(`${apiPrefix}/spaces/:space_id/assets_truncate/`, contentManagementAuthentication, assetController.truncateAsset);\n\n// Upload Media (cloudinary)\napp.post(`${apiPrefix}/media/upload`, upload.single('file'), cloudinaryController.upload);\napp.get(`${apiPrefix}/media/:param?/:public_id`, cloudinaryController.getImage);\n\n\n// Image api\n// app.get('/img/:param?/:public_id', cloudinaryController.getImage);\n// app.post(`/upload`, upload.single('file'), cloudinaryController.upload);\n\n\n/**\n * CIC App codebase: WEBUI\n */\napp.use(express.static(path.join(__dirname, 'webui')));\n\napp.get('/*', (req, res) => {\n  res.sendFile(path.join(__dirname, 'webui', 'index.html'));\n});\n\n/**\n * Start Express server.\n */\n\napp.listen(app.get('port'), () => {\n  console.log('%s CICAPP service is running at http://localhost:%d in %s mode', chalk.green('✓'), app.get('port'), app.get('env'));\n  console.log('  Press CTRL-C to stop\\n');\n});\n\n\nmodule.exports = app;\n"]}