{"version":3,"sources":["../../server/app/index.js"],"names":["require","_","moment","express","flash","compression","session","bodyParser","expressValidator","jwt","jwks","dotenv","logger","chalk","MongoStore","path","mongoose","multer","Space","upload","dest","join","__dirname","load","spaceController","contentTypeController","entryController","apiKeyController","assetController","organizationController","cloudinaryController","app","Promise","global","connect","process","env","MONGODB_URI","MONGOLAB_URI","connection","on","console","log","red","exit","set","PORT","use","json","urlencoded","extended","allowCrossDomain","req","res","next","header","resave","saveUninitialized","secret","SESSION_SECRET","store","url","autoReconnect","locals","user","contentDeliveryAuthentication","token","replace","get","contentManagementAuthentication","spaceId","params","space_id","access_token","query","findOne","_id","err","space","status","send","code","message","apiKeysActive","apiKeys","filter","item","active","length","theKey","find","deliveryKey","isBefore","expireDate","expressJwtSecret","cache","rateLimit","jwksRequestsPerMinute","jwksUri","handleSigningKeyError","cb","SigningKeyNotFoundError","Error","audience","issuer","algorithms","apiPrefix","getAllEntries","getSingleEntry","getSingle","getAllContentTypes","getSingleContentType","getAll","post","createOrganization","getAllMemberOrganization","createMemberOrganization","delete","delMemberOrganization","createSpace","put","updateSpace","deleteSpace","createContentType","updateContentType","deleteContentType","createEntry","updateEntry","deleteEntry","truncateEntry","getAllKey","createKey","updateKey","clearAllKey","deleteKey","getSingleAsset","createAsset","updateAsset","deleteAsset","truncateAsset","single","getImage","static","sendFile","listen","green","module","exports"],"mappings":"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","file":"index.js","sourcesContent":["require('babel-register');\nrequire('babel-polyfill');\n\nconst _ = require('lodash');\nconst moment = require('moment');\nconst express = require('express');\nconst flash = require('express-flash');\nconst compression = require('compression');\nconst session = require('express-session');\nconst bodyParser = require('body-parser');\nconst expressValidator = require('express-validator');\n\n// const jwtWebToken = require('jsonwebtoken');\nconst jwt = require('express-jwt');\nconst jwks = require('jwks-rsa');\n\n\nconst dotenv = require('dotenv');\nconst logger = require('morgan');\nconst chalk = require('chalk');\n\n// const errorHandler = require('errorhandler');\nconst MongoStore = require('connect-mongo')(session);\nconst path = require('path');\nconst mongoose = require('mongoose');\nconst multer = require('multer');\n\nconst Space = require('./models/Space');\n\nconst upload = multer({ dest: path.join(__dirname, 'uploads') });\n\n\ndotenv.load({ path: '.env' });\n\n\nconst spaceController = require('./controllers/space');\nconst contentTypeController = require('./controllers/space/contentType');\nconst entryController = require('./controllers/space/entry');\nconst apiKeyController = require('./controllers/space/apikey');\nconst assetController = require('./controllers/space/asset');\n\nconst organizationController = require('./controllers/account/organization');\n\nconst cloudinaryController = require('./controllers/services/cloudinary');\n\n\n/**\n * Create Express server.\n */\nconst app = express();\n\n/**\n * Connect to MongoDB.\n */\nmongoose.Promise = global.Promise;\nmongoose.connect(process.env.MONGODB_URI || process.env.MONGOLAB_URI);\nmongoose.connection.on('error', () => {\n    console.log('%s MongoDB connection error. Please make sure MongoDB is running.', chalk.red('✗'));\n    process.exit();\n});\n\napp.set('port', process.env.PORT || 4000);\napp.use(compression());\napp.use(expressValidator());\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({extended: true}));\n\n// CORS middleware\nconst allowCrossDomain = (req, res, next) => {\n    res.header('Access-Control-Allow-Origin', '*');\n    res.header('Access-Control-Allow-Methods', 'GET,HEAD,OPTIONS,POST,PUT,DELETE');\n    res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept, Authorization, X-CIC-Content-Type');\n    next();\n};\n\n\n\napp.use(allowCrossDomain);\n\napp.use(session({\n    resave: true,\n    saveUninitialized: true,\n    secret: process.env.SESSION_SECRET,\n    store: new MongoStore({\n        url: process.env.MONGODB_URI || process.env.MONGOLAB_URI,\n        autoReconnect: true\n    })\n}));\n\napp.use(flash());\napp.use(logger('dev'));\n\napp.use((req, res, next) => {\n    res.locals.user = req.user;\n    next();\n});\n\n/**\n * CIC App codebase: DELIVERY\n */\n\n// app.get('/', (req, res, next) => {\n//   console.log('req.user', req.user);\n//   res.send({ user: req.user });\n// });\n\n// const tokenAuthenticate = jwt({\n//   secret: 'shhhhh'\n// });\n\nconst contentDeliveryAuthentication = (req, res, next) => {\n\n    const token = _.replace(req.get('Authorization'), 'Bearer ', '');\n    if (token !== '')\n        return contentManagementAuthentication(req, res, next);\n\n    const spaceId = req.params.space_id;\n    const access_token = req.query.access_token;\n\n    Space.findOne({_id: spaceId, }, (err, space) => {\n        if (err) {\n            return res.status(401).send({\n                code: 401,\n                message: 'This space id is invalid'\n            });\n        }\n\n        const apiKeysActive = space.apiKeys.filter(item => item.active === true)\n        if (apiKeysActive.length > 0) {\n            const theKey = apiKeysActive.find(item => item.deliveryKey === access_token);\n            if (moment().isBefore(theKey.expireDate)) {\n                next()\n            } else {\n                res.status(401).send({\n                    code: 401,\n                    message: 'This token has expired'\n                });\n            }\n        } else {\n            res.status(401).send({\n                code: 401,\n                message: 'This space does not have api key'\n            });\n        }\n\n    });\n};\n\n// const contentManagementAuthentication = (req, res, next) => {\n//   const token = _.replace(req.get('Authorization'), 'Bearer ', '');\n//   console.log('token', token);\n//   const result = jwtWebToken.verify(token, 'Ueoj1TEGMuR5rIRJsfDKvlft4vsm7qsIYKFYBZ_r_K9B-3IU1Weugk_yon0n2LX-');\n//   console.log('result', result);\n//   if (result === true) next();\n// };\n\n\nconst contentManagementAuthentication = jwt({\n    secret: jwks.expressJwtSecret({\n        cache: true,\n        rateLimit: true,\n        jwksRequestsPerMinute: 5,\n        jwksUri: \"https://forviz.au.auth0.com/.well-known/jwks.json\",\n        handleSigningKeyError: (err, cb) => {\n            if (err instanceof jwks.SigningKeyNotFoundError) {\n                return cb(new Error('This is bad'));\n            }\n            return cb(err);\n        }\n    }),\n    audience: 'content.forviz.com',\n    issuer: \"https://forviz.au.auth0.com/\",\n    algorithms: ['RS256']\n});\n\n\nconst apiPrefix = '/v1';\n\napp.get(`${apiPrefix}/spaces/:space_id/entries`, contentDeliveryAuthentication, entryController.getAllEntries);\napp.get(`${apiPrefix}/spaces/:space_id/entries/:entry_id`, contentDeliveryAuthentication, entryController.getSingleEntry);\n\napp.get(`${apiPrefix}/spaces/:space_id`, contentDeliveryAuthentication, spaceController.getSingle);\napp.get(`${apiPrefix}/spaces/:space_id/content_types`, contentDeliveryAuthentication, contentTypeController.getAllContentTypes);\napp.get(`${apiPrefix}/spaces/:space_id/content_types/:content_type_id`, contentDeliveryAuthentication, contentTypeController.getSingleContentType);\napp.get(`${apiPrefix}/spaces/:space_id/entries`, contentDeliveryAuthentication, entryController.getAllEntries);\napp.get(`${apiPrefix}/spaces/:space_id/entries/:entry_id`, contentDeliveryAuthentication, entryController.getSingleEntry);\n\napp.get(`${apiPrefix}/organizations`, contentManagementAuthentication, organizationController.getAll);\napp.get(`${apiPrefix}/organizations/:organization_id`, contentManagementAuthentication, organizationController.getSingle);\napp.post(`${apiPrefix}/organizations`, contentManagementAuthentication, organizationController.createOrganization);\napp.get(`${apiPrefix}/organizations/:organization_id/members`, contentManagementAuthentication, organizationController.getAllMemberOrganization); // get all member in organization\napp.post(`${apiPrefix}/organizations/:organization_id/members`, contentManagementAuthentication, organizationController.createMemberOrganization);// add member in organization\napp.delete(`${apiPrefix}/organizations/:organization_id/members/:user_id`, contentManagementAuthentication, organizationController.delMemberOrganization);// delete member in organization\n\n// TODO QUERY entries\n\n/**\n * CIC App codebase: MANAGEMENT\n */\napp.get(`${apiPrefix}/spaces/`, contentManagementAuthentication, spaceController.getAll);\napp.post(`${apiPrefix}/spaces`, contentManagementAuthentication, spaceController.createSpace);\napp.put(`${apiPrefix}/spaces/:space_id`, contentManagementAuthentication, spaceController.updateSpace);\napp.delete(`${apiPrefix}/spaces/:space_id`, contentManagementAuthentication, spaceController.deleteSpace);\n\napp.post(`${apiPrefix}/spaces/:space_id/content_types/`, contentManagementAuthentication, contentTypeController.createContentType);\napp.put(`${apiPrefix}/spaces/:space_id/content_types/:content_type_id`, contentManagementAuthentication, contentTypeController.updateContentType);\napp.delete(`${apiPrefix}/spaces/:space_id/content_types/:content_type_id`, contentManagementAuthentication, contentTypeController.deleteContentType);\n\n// CREATE entry\napp.post(`${apiPrefix}/spaces/:space_id/entries/`, contentManagementAuthentication, entryController.createEntry);\napp.put(`${apiPrefix}/spaces/:space_id/entries/:entry_id`, contentManagementAuthentication, entryController.updateEntry);\napp.delete(`${apiPrefix}/spaces/:space_id/entries/:entry_id`, contentManagementAuthentication, entryController.deleteEntry);\napp.delete(`${apiPrefix}/spaces/:space_id/entries_truncate/`, contentManagementAuthentication, entryController.truncateEntry);\n\n// API Keys\napp.get(`${apiPrefix}/spaces/:space_id/api_keys`, contentManagementAuthentication, apiKeyController.getAllKey);\napp.post(`${apiPrefix}/spaces/:space_id/api_keys`, contentManagementAuthentication, apiKeyController.createKey);\napp.put(`${apiPrefix}/spaces/:space_id/api_keys/:key_id`, contentManagementAuthentication, apiKeyController.updateKey);\napp.delete(`${apiPrefix}/spaces/:space_id/api_keys`, contentManagementAuthentication, apiKeyController.clearAllKey);\napp.delete(`${apiPrefix}/spaces/:space_id/api_keys/:key_id`, contentManagementAuthentication, apiKeyController.deleteKey);\n\n// Assets\napp.get(`${apiPrefix}/spaces/:space_id/assets/:asset_id`, contentManagementAuthentication, assetController.getSingleAsset);\napp.post(`${apiPrefix}/spaces/:space_id/assets/`, contentManagementAuthentication, assetController.createAsset);\napp.put(`${apiPrefix}/spaces/:space_id/assets/:asset_id`, contentManagementAuthentication, assetController.updateAsset);\napp.delete(`${apiPrefix}/spaces/:space_id/assets/:asset_id`, contentManagementAuthentication, assetController.deleteAsset);\napp.delete(`${apiPrefix}/spaces/:space_id/assets_truncate/`, contentManagementAuthentication, assetController.truncateAsset);\n\n// Upload Media (cloudinary)\napp.post(`${apiPrefix}/media/upload`, upload.single('file'), cloudinaryController.upload);\napp.get(`${apiPrefix}/media/:param?/:public_id`, cloudinaryController.getImage);\n\n\n// Image api\n// app.get('/img/:param?/:public_id', cloudinaryController.getImage);\n// app.post(`/upload`, upload.single('file'), cloudinaryController.upload);\n\n\n/**\n * CIC App codebase: WEBUI\n */\napp.use(express.static(path.join(__dirname, 'webui')));\n\napp.get('/*', (req, res) => {\n  res.sendFile(path.join(__dirname, 'webui', 'index.html'));\n});\n\n/**\n * Start Express server.\n */\n\n\napp.get(`/spaces/:space_id`, contentDeliveryAuthentication, entryController.getAllEntries);\napp.get(`/spaces/:space_id`, contentDeliveryAuthentication, entryController.getAllEntries);\n\n\napp.listen(app.get('port'), () => {\n    console.log('%s CICAPP service is running at http://localhost:%d in %s mode', chalk.green('✓'), app.get('port'), app.get('env'));\n\n    console.log('  Press CTRL-C to stop\\n');\n});\n\n\nmodule.exports = app;\n"]}