{"version":3,"sources":["../../../server/test/controllers/space.test.js"],"names":["process","env","NODE_ENV","jwt","require","Space","chai","chaiHttp","server","should","token","sign","foo","use","describe","beforeEach","done","remove","err","it","request","post","set","send","name","end","res","have","status","body","space","be","an","property","eql","user","organization","defaultLocale","save","savedSpace","put","id","get","items","a","sys","delete"],"mappings":"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","file":"space.test.js","sourcesContent":["/* eslint-disable */\nprocess.env.NODE_ENV = 'test';\n\nconst jwt = require('jsonwebtoken');\nconst Space = require('../../app/models/Space');\n\n// Require the dev-dependencies\nconst chai = require('chai');\nconst chaiHttp = require('chai-http');\nconst server = require('../../app');\n\nconst should = chai.should();\nconst token = jwt.sign({ foo: 'bar' }, 'testing');\n\nchai.use(chaiHttp);\n// Our parent block\ndescribe('Spaces', () => {\n  beforeEach((done) => {\n    // Before each test we empty the database\n    Space.remove({}, (err) => {\n      done();\n    });\n  });\n\n  /*\n   * Test the /GET route\n   */\n  describe('/POST space', () => {\n    it('it should return created space/user/organization', (done) => {\n      chai.request(server)\n        .post('/v1/spaces')\n        .set('Authorization', `Bearer ${token}`)\n        .send({ name: 'Test Space' })\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.space.should.be.an('object');\n          res.body.space.should.have.property('_id');\n          res.body.space.should.have.property('name').eql('Test Space');\n          res.body.space.should.have.property('defaultLocale').eql('en');\n\n          res.body.user.should.have.property('_id');\n\n          res.body.organization.should.have.property('_id');\n\n          done();\n        });\n    });\n  });\n\n  /*\n  * Test the /PUT/:id route\n  */\n  describe('/PUT/:id space', () => {\n    it('it should update a space with id', (done) => {\n      const space = new Space({ name: 'The Lord of the Rings', defaultLocale: 'en' });\n      space.save((err, savedSpace) => {\n        chai.request(server)\n        .put('/v1/spaces/' + savedSpace.id)\n        .set('Authorization', `Bearer ${token}`)\n        .send({ name: 'Harry Potter' })\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.space.should.have.property('_id').eql(savedSpace.id);\n          res.body.space.should.have.property('name').eql('Harry Potter');\n          done();\n        });\n      });\n    });\n  });\n  /*\n   * Test the /GET route\n   */\n  describe('/GET spaces', () => {\n    it('it should GET all the spaces', (done) => {\n      chai.request(server)\n        .get('/v1/spaces')\n        .set('Authorization', `Bearer ${token}`)\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.items.should.be.a('array');\n          done();\n        });\n    });\n  });\n\n  /*\n   * Test the /GET single\n   */\n  describe('/GET spaces/:spaceId', () => {\n    it('it should GET a spaces', (done) => {\n      const space = new Space({ name: 'The Lord of the Rings', defaultLocale: 'en' });\n      space.save((err, savedSpace) => {\n        chai.request(server)\n          .get('/v1/spaces/' + savedSpace.id)\n          .set('Authorization', `Bearer ${token}`)\n          .end((err, res) => {\n            res.should.have.status(200);\n            res.body.space.should.have.property('_id').eql(savedSpace.id);\n            res.body.space.should.have.property('name').eql('The Lord of the Rings');\n            done();\n          });\n      });\n    });\n\n    it('it should Error if not found', (done) => {\n      chai.request(server)\n      .get('/v1/spaces/0000000')\n      .set('Authorization', `Bearer ${token}`)\n      .end((err, res) => {\n        res.should.have.status(404);\n        res.body.sys.should.have.property('type').eql('Error');\n        res.body.sys.should.have.property('id').eql('NotFound');\n        done();\n      });\n    });\n  });\n\n  /*\n  * Test the /DELETE/:id route\n  */\n  describe('/DELETE/:id space', () => {\n    it('it should update a space with id', (done) => {\n      const space = new Space({ name: 'The Lord of the Rings', defaultLocale: 'en' });\n      space.save((err, savedSpace) => {\n        chai.request(server)\n        .delete('/v1/spaces/' + savedSpace.id)\n        .set('Authorization', `Bearer ${token}`)\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.have.property('status').eql('SUCCESSFUL');\n          done();\n\n        });\n      });\n    });\n  });\n});\n"]}